---

- name: Include homebrew vars files
  include_vars:
    dir: ../vars/
    extensions:
      - yml
  
  

- blockinfile:
    dest: "{{ home }}/.bashrc"
    marker: "### {mark} {{ homebrew__div }}"
    content: "{{ homebrew__shell }}"
    create: true
  
  

- blockinfile:
    dest: "{{ home }}/.zshrc"
    marker: "### {mark} {{ homebrew__div }}"
    content: "{{ homebrew__shell }}"
    create: true    
  
  

# https://github.com/geerlingguy/ansible-role-homebrew
# Tap.
- name: Ensure configured taps are tapped.
  homebrew_tap: "tap={{ item }} state=present"
  loop: "{{ homebrew_taps|flatten(levels=1) }}"
  
  
# Brew.
- name: Upgrade all homebrew packages (if configured).
  homebrew: update_homebrew=yes upgrade_all=yes
  when: 
    - install_homebrew_apps_development
  
  

- name: Ensure configured homebrew packages are installed from homebrew_installed_packages.
  command: "brew install {{ item }}"
  loop: "{{ homebrew_installed_packages|flatten(levels=1) }}"
  
  

- name: Ensure configured homebrew packages are installed from homebrew_packages.
  command: "brew install {{ item }}"
  loop: "{{ homebrew_packages|flatten(levels=1) }}"
  when: 
    - install_homebrew_apps_development
  
  

- name: Ensure blacklisted homebrew packages are not installed.
  homebrew: "name={{ item }} state=absent"
  loop: "{{ homebrew_uninstalled_packages|flatten(levels=1) }}"
  
  

# Cask.
- name: Install configured cask applications from homebrew_cask_apps.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  loop: "{{ homebrew_cask_apps|flatten(levels=1) }}"
  
  

- name: Install configured cask applications from homebrew_apps_backup.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  loop: "{{ homebrew_apps_backup|flatten(levels=1) }}"
  when: 
    - install_homebrew_apps_backup
  
  

- name: Install configured cask applications from homebrew_apps_development.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  loop: "{{ homebrew_apps_development|flatten(levels=1) }}"
  when: 
    - install_homebrew_apps_development
  
  

- name: Install configured cask applications from homebrew_apps_media.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  loop: "{{ homebrew_apps_media|flatten(levels=1) }}"
  when: 
    - install_homebrew_apps_media
  
  

- name: Install configured cask applications from homebrew_apps_password.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  loop: "{{ homebrew_apps_password|flatten(levels=1) }}"
  when: 
    - install_homebrew_apps_password 
  
  

- name: Install configured cask applications from homebrew_apps_productivity.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  loop: "{{ homebrew_apps_productivity|flatten(levels=1) }}"
  when: 
    - install_homebrew_apps_productivity
  
  

- name: Install configured cask applications from homebrew_apps_tools.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  loop: "{{ homebrew_apps_tools|flatten(levels=1) }}"
  when: 
    - install_homebrew_apps_tools
  
  

- name: Install configured font homebrew_fonts.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  loop: "{{ homebrew_fonts|flatten(levels=1) }}"
  when: 
    - install_homebrew_fonts
  
  

- name: Check for Brewfile.
  stat:
    path: "{{ homebrew_brewfile_dir }}/Brewfile"
  register: homebrew_brewfile
  

- name: Install from Brewfile.
  command: "brew bundle chdir={{ homebrew_brewfile_dir }}"
  when: 
    - homebrew_brewfile.stat.exists
    - homebrew_use_brewfile
  
