---

- name: Include homebrew vars files
  include_vars:
    dir: ../vars/
    extensions:
      - yml
  become: false
  ignore_errors: true

- name: "include test: {{ homebrew_cask_appdir }}"  
  file:
    path: "{{ home }}/.zshrc"
    state: touch
  become: false

- name: homebrew section zshrc
  lineinfile:
    dest: "{{ home }}/.zshrc"
    state: present
    line: "{{ homebrew__div }}"
  become: false

- name: save homebrew path to zshrc
  lineinfile:
    dest: "{{ home }}/.zshrc"
    state: present
    line: "{{ homebrew__path }}"
  become: false

- name: turn off homebrew analytics
  lineinfile:
    dest: "{{ home }}/.zshrc"
    state: present
    line: "{{ homebrew__no_analytics }}"
  become: false

- name: force homebrew no-insecure-redirect
  lineinfile:
    dest: "{{ home }}/.zshrc"
    state: present
    line: "{{ homebrew__no_insecure_redirect }}"
  become: false

- name: require-sha
  when: homebrew_cask_require_sha
  lineinfile:
    dest: "{{ home }}/.zshrc"
    state: present
    line: "{{ homebrew__require_sha }}"
  become: false

- file:
    path: "{{ home }}/.bashrc"
    state: touch
  become: false

- name: homebrew section bashrc
  lineinfile:
    dest: "{{ home }}/.bashrc"
    state: present
    line: "{{ homebrew__div }}"
  become: false

- name: save homebrew path to bashrc
  lineinfile:
    dest: "{{ home }}/.bashrc"
    state: present
    line: "{{ homebrew__path }}"
  become: false

- name: turn off homebrew analytics
  lineinfile:
    dest: "{{ home }}/.bashrc"
    state: present
    line: "{{ homebrew__no_analytics }}"
  become: false

- name: force homebrew no-insecure-redirect
  lineinfile:
    dest: "{{ home }}/.bashrc"
    state: present
    line: "{{ homebrew__no_insecure_redirect }}"
  become: false

- name: require-sha
  when: homebrew_cask_require_sha
  lineinfile:
    dest: "{{ home }}/.bashrc"
    state: present
    line: "{{ homebrew__require_sha }}"
  become: false

# https://github.com/geerlingguy/ansible-role-homebrew
# Tap.
- name: Ensure configured taps are tapped.
  homebrew_tap: "tap={{ item }} state=present"
  with_items: "{{ homebrew_taps }}"
  become: false


# Brew.
- name: Upgrade all homebrew packages (if configured).
  homebrew: update_homebrew=yes upgrade_all=yes
  when: homebrew_upgrade_all_packages
  become: false
  ignore_errors: true

- name: Ensure configured homebrew packages are installed from homebrew_installed_packages.
  command: "brew install {{ item }}"
  with_items: "{{ homebrew_installed_packages }}"
  become: false
  ignore_errors: true

- name: Ensure configured homebrew packages are installed from homebrew_packages.
  command: "brew install {{ item }}"
  with_items: "{{ homebrew_packages }}"
  when: install_homebrew_packages
  become: false
  ignore_errors: true

- name: Ensure blacklisted homebrew packages are not installed.
  homebrew: "name={{ item }} state=absent"
  with_items: "{{ homebrew_uninstalled_packages }}"
  become: false
  ignore_errors: true

# Cask.
- name: Install configured cask applications from homebrew_cask_apps.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_cask_apps }}"
  become: false
  ignore_errors: true

- name: Install configured cask applications from homebrew_apps_backup.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_apps_backup }}"
  when: install_homebrew_apps_backup
  become: false
  ignore_errors: true

- name: Install configured cask applications from homebrew_apps_development.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_apps_development }}"
  when: install_homebrew_apps_development
  become: false
  ignore_errors: true

- name: Install configured cask applications from homebrew_apps_media.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_apps_media }}"
  when: install_homebrew_apps_media
  become: false
  ignore_errors: true

- name: Install configured cask applications from homebrew_apps_password.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_apps_password }}"
  when: 
    - install_homebrew_apps_password 
    - become_skip is not defined or not become_skip
  become: false
  ignore_errors: true

- name: Install configured cask applications from homebrew_apps_productivity.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_apps_productivity }}"
  when: install_homebrew_apps_productivity
  become: false
  ignore_errors: true

- name: Install configured cask applications from homebrew_apps_tools.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_apps_tools }}"
  when: install_homebrew_apps_tools
  become: false
  ignore_errors: true

- name: Install configured font homebrew_fonts.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_fonts }}"
  when: install_homebrew_fonts
  become: false
  ignore_errors: true

- name: Check for Brewfile.
  stat:
    path: "{{ homebrew_brewfile_dir }}/Brewfile"
  register: homebrew_brewfile
  become: false


- name: Install from Brewfile.
  command: "brew bundle chdir={{ homebrew_brewfile_dir }}"
  when: homebrew_brewfile.stat.exists and homebrew_use_brewfile
  become: false
