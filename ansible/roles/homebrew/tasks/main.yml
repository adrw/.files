---

- file:
    path: "{{ home }}/.zshrc"
    state: touch
  become: false

- name: homebrew section zshrc
  lineinfile:
    dest: "{{ home }}/.zshrc"
    state: present
    line: "{{ homebrew__div }}"
  become: false

- name: save homebrew path to zshrc
  lineinfile:
    dest: "{{ home }}/.zshrc"
    state: present
    line: "{{ homebrew__path }}"
  become: false

- name: turn off homebrew analytics
  lineinfile:
    dest: "{{ home }}/.zshrc"
    state: present
    line: "{{ homebrew__no_analytics }}"
  become: false

- name: force homebrew no-insecure-redirect
  lineinfile:
    dest: "{{ home }}/.zshrc"
    state: present
    line: "{{ homebrew__no_insecure_redirect }}"
  become: false

- name: require-sha
  when: homebrew_cask_require_sha
  lineinfile:
    dest: "{{ home }}/.zshrc"
    state: present
    line: "{{ homebrew__require_sha }}"
  become: false

- file:
    path: "{{ home }}/.bashrc"
    state: touch
  become: false

- name: homebrew section bashrc
  lineinfile:
    dest: "{{ home }}/.bashrc"
    state: present
    line: "{{ homebrew__div }}"
  become: false

- name: save homebrew path to bashrc
  lineinfile:
    dest: "{{ home }}/.bashrc"
    state: present
    line: "{{ homebrew__path }}"
  become: false

- name: turn off homebrew analytics
  lineinfile:
    dest: "{{ home }}/.bashrc"
    state: present
    line: "{{ homebrew__no_analytics }}"
  become: false

- name: force homebrew no-insecure-redirect
  lineinfile:
    dest: "{{ home }}/.bashrc"
    state: present
    line: "{{ homebrew__no_insecure_redirect }}"
  become: false

- name: require-sha
  when: homebrew_cask_require_sha
  lineinfile:
    dest: "{{ home }}/.bashrc"
    state: present
    line: "{{ homebrew__require_sha }}"
  become: false

# https://github.com/geerlingguy/ansible-role-homebrew
# Tap.
- name: Ensure configured taps are tapped.
  homebrew_tap: "tap={{ item }} state=present"
  with_items: "{{ homebrew_taps }}"
  become: false


# Brew.
- name: Ensure configured homebrew packages are installed.
  homebrew: "name={{ item }} state=present"
  with_items: "{{ homebrew_installed_packages }}"
  async: 1000
  poll: 0
  register: homebrew_install
  become: false
  ignore_errors: true


- name: Ensure blacklisted homebrew packages are not installed.
  homebrew: "name={{ item }} state=absent"
  with_items: "{{ homebrew_uninstalled_packages }}"
  become: false
  ignore_errors: true


- name: Upgrade all homebrew packages (if configured).
  homebrew: update_homebrew=yes upgrade_all=yes
  when: homebrew_upgrade_all_packages
  become: false
  ignore_errors: true


# Cask.
- name: Install configured cask applications.
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }}"
  with_items: "{{ homebrew_cask_apps }}"
  async: 1000
  poll: 0
  register: homebrew_cask_install
  become: false
  ignore_errors: true

- name: Check for Brewfile.
  stat:
    path: "{{ homebrew_brewfile_dir }}/Brewfile"
  register: homebrew_brewfile
  become: false


- name: Install from Brewfile.
  command: "brew bundle chdir={{ homebrew_brewfile_dir }}"
  when: homebrew_brewfile.stat.exists and homebrew_use_brewfile
  become: false

- name: Homebrew Install Check
  async_status:
    jid: "{{ homebrew_install.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 120

- name: Homebrew Install Check
  async_status:
    jid: "{{ homebrew_cask_install.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 120