---

- name: "store home directory"
  shell: echo ~/
  register: home
  become: false

- name: set computer name
  shell: scutil --set ComputerName "{{ local_hostname }}"
  become: true
- name: set localhost name
  shell: scutil --set LocalHostName "{{ local_hostname }}"
  become: true
- name: set localhost name
  shell: defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "{{ local_hostname }}"
  become: true

- name: enable firewall, logging, and stealth mode
  shell: /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate on
  become: true
- shell: /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingmode on
  become: true
- shell: /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on
  become: true

- name: disable phone-home macos daemons and agents
  shell: bash {{ roles_dir }}/macOS_security/files/homecall.sh fixmacos
  become: false

- name: stop firewall auto-whitelist by all software
  shell: /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsigned off
  become: true
- shell: /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsignedapp off
  become: true

# - name: install dnscrypt-proxy
#   homebrew:
#     name: dnscrypt-proxy
#   become: false
# - name: start dnscrypt-proxy as service
#   command: brew services start dnscrypt-proxy
#   become: true

- name: install privoxy
  homebrew:
    name: privoxy
  become: false
- name: start privoxy as service
  command: brew services start privoxy
  become: false
- name: configure network to privoxy
  command: networksetup -setwebproxy "Wi-Fi" 127.0.0.1 8118
  become: true
- name: configure secure network to privoxy
  command: networksetup -setsecurewebproxy "Wi-Fi" 127.0.0.1 8118
  become: true

- name: ensure system integrity protection
  command: csrutil status
  register: sip_status
  failed_when: "'disabled' in sip_status.stderr"
  become: false
- assert:
    that: sip_status.stdout.find('enabled') != -1
    msg: "System Integrity Protection is disabled"

- name: check filevault full disk encryption status
  command: fdesetup isactive
  register: filevault_status
  failed_when: "'FAILED' in filevault_status.stderr"
  become: false
- name: seed /dev/random before enabling filevault
  when: filevault_status.stdout.find('true') == -1
  shell: echo "{{ fde_seed }}" >> /dev/random
  become: false
- assert:
    that: filevault_status.stdout.find('true') != -1
    msg: "Filevault is not on"

- name: clear filevault key when hibernate/sleep
  shell: sudo pmset -a destroyfvkeyonstandby 1
  when: filevault_auto_evict
  become: true
- shell: sudo pmset -a hibernatemode 25
  when: filevault_auto_evict
  become: true
- shell: sudo pmset -a powernap 0
  when: filevault_auto_evict
  become: true
- shell: sudo pmset -a standby 0
  when: filevault_auto_evict
  become: true
- shell: sudo pmset -a standbydelay 0
  when: filevault_auto_evict
  become: true
- shell: sudo pmset -a autopoweroff 0
  when: filevault_auto_evict
  become: true
